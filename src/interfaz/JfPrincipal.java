package interfaz;

import BD.ConectarBD;
import BD.ConsulTablas;
import BD.logicaConsultas;
import Ejecutador.ImagenFondo;
import Logica.algoritmo;
import java.awt.ComponentOrientation;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import static javax.swing.GroupLayout.Alignment.CENTER;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;

public class JfPrincipal extends javax.swing.JFrame {

    logicaConsultas ManejadorConexion = new logicaConsultas();
    ConsulTablas ManejadorConsultas = new ConsulTablas();
    ArrayList<String> ArrB;
    ArrayList<String> ArrT;
    ArrayList<String> ArrC;
    ArrayList<String> ArrJ;

    public JfPrincipal() {
        initComponents();
        setTitle("Aplicacion Sugerir Joins");
        this.setLocationRelativeTo(null);
        jDesktop.setBorder(new ImagenFondo());
        ValoresBase("", txtNombreBase.getText());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jDesktop = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTblBaseDatos = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtxtResultado = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        txtNombreBase = new javax.swing.JTextField();
        btnRevisar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jCmbTabla1 = new javax.swing.JComboBox();
        jCmbTabla2 = new javax.swing.JComboBox();
        btnAnalizar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jtblColumnas = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jtblJoin2 = new javax.swing.JTable();
        jtxtCol1 = new javax.swing.JTextField();
        jtxtCol2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableJoin = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTblBaseDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTblBaseDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTblBaseDatosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTblBaseDatos);

        jtxtResultado.setColumns(20);
        jtxtResultado.setRows(5);
        jScrollPane4.setViewportView(jtxtResultado);

        jLabel1.setFont(new java.awt.Font("Georgia", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Seleccione la base ");

        txtNombreBase.setEditable(false);

        btnRevisar.setBackground(new java.awt.Color(102, 153, 255));
        btnRevisar.setFont(new java.awt.Font("Georgia", 3, 12)); // NOI18N
        btnRevisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/cargarTabla.jpg"))); // NOI18N
        btnRevisar.setText("Revisar");
        btnRevisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRevisarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Georgia", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Seleccione las tablas a analizar");

        jCmbTabla1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione...." }));

        jCmbTabla2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione..." }));

        btnAnalizar.setBackground(new java.awt.Color(102, 153, 255));
        btnAnalizar.setFont(new java.awt.Font("Georgia", 3, 12)); // NOI18N
        btnAnalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/AnalizarT.png"))); // NOI18N
        btnAnalizar.setText("Analizar");
        btnAnalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalizarActionPerformed(evt);
            }
        });

        jtblColumnas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtblColumnas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblColumnasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jtblColumnas);

        jtblJoin2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jtblJoin2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtblJoin2MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jtblJoin2);

        jtxtCol1.setEditable(false);

        jtxtCol2.setEditable(false);

        jButton1.setBackground(new java.awt.Color(102, 153, 255));
        jButton1.setFont(new java.awt.Font("Georgia", 3, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Go.png"))); // NOI18N
        jButton1.setText("Ir a la consulta");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTableJoin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(jTableJoin);

        javax.swing.GroupLayout jDesktopLayout = new javax.swing.GroupLayout(jDesktop);
        jDesktop.setLayout(jDesktopLayout);
        jDesktopLayout.setHorizontalGroup(
            jDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane6)
                    .addGroup(jDesktopLayout.createSequentialGroup()
                        .addGroup(jDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jDesktopLayout.createSequentialGroup()
                                .addComponent(btnAnalizar)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addGroup(jDesktopLayout.createSequentialGroup()
                                .addComponent(jCmbTabla1, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jCmbTabla2, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1)
                            .addGroup(jDesktopLayout.createSequentialGroup()
                                .addComponent(txtNombreBase, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnRevisar))
                            .addGroup(jDesktopLayout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jDesktopLayout.createSequentialGroup()
                                .addComponent(jtxtCol1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jtxtCol2, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jDesktopLayout.setVerticalGroup(
            jDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRevisar)
                            .addComponent(txtNombreBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCmbTabla1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCmbTabla2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addGroup(jDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAnalizar)
                            .addComponent(jButton1))
                        .addGap(9, 9, 9))
                    .addGroup(jDesktopLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGroup(jDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jDesktopLayout.createSequentialGroup()
                        .addGroup(jDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jDesktopLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtxtCol1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtxtCol2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jDesktop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void valoresTablas(String valor, String Base) {
        try {
            DefaultComboBoxModel cmb3 = new DefaultComboBoxModel();
            cmb3.addElement("Seleccione...");
            ArrT = ManejadorConexion.ConsultarTablas(valor, Base);
            String datos3 = "";
            for (String a : ArrT) {
                datos3 = a;
                cmb3.addElement(datos3);
            }
            jCmbTabla1.setModel(cmb3);

            //txtIde.setText(JFrameModificar.txtIde.getText());
            DefaultComboBoxModel cmb = new DefaultComboBoxModel();
            cmb.addElement("Seleccione...");
            ArrT = ManejadorConexion.ConsultarTablas(valor, Base);
            String datos = "";
            for (String e : ArrT) {
                datos = e;
                cmb.addElement(datos);
            }
            jCmbTabla2.setModel(cmb);

        } catch (Exception e) {
        }
    }


    private void jTblBaseDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTblBaseDatosMouseClicked
        // TODO add your handling code here:
        int row = jTblBaseDatos.getSelectedRow();
        String strNombre = jTblBaseDatos.getModel().getValueAt(row, 0).toString();
        txtNombreBase.setText(strNombre);


    }//GEN-LAST:event_jTblBaseDatosMouseClicked

    private void btnRevisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRevisarActionPerformed
        // TODO add your handling code here:
        if (txtNombreBase.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Debe selecccionar una base para Revisar");
        } else {
            valoresTablas(txtNombreBase.getText(), txtNombreBase.getName());
        }


    }//GEN-LAST:event_btnRevisarActionPerformed

    private void btnAnalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalizarActionPerformed
        // TODO add your handling code here:
        try {

            String valor = (String) jCmbTabla1.getSelectedItem();
            String valor2 = (String) jCmbTabla2.getSelectedItem();
            if (valor.equals("Seleccione...") || valor2.equals("Seleccione...")) {
                JOptionPane.showMessageDialog(this, "Debe seleccionar las tablas a analizar");
            } else {
                algoritmo a = new algoritmo();

                jtxtResultado.setText(a.Verificacion(valor, valor2, txtNombreBase.getText()));
                valoresColumnas("");
                valoresColumnas2("");
            }
        } catch (Exception d) {
            d.getMessage();
        }
    }//GEN-LAST:event_btnAnalizarActionPerformed

    private void jtblColumnasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblColumnasMouseClicked
        // TODO add your handling code here:
        int row = jtblColumnas.getSelectedRow();
        String strNombre = jtblColumnas.getModel().getValueAt(row, 0).toString();
        jtxtCol1.setText(strNombre);

    }//GEN-LAST:event_jtblColumnasMouseClicked

    private void jtblJoin2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtblJoin2MouseClicked
        // TODO add your handling code here:
        int row = jtblJoin2.getSelectedRow();
        String strNombre = jtblJoin2.getModel().getValueAt(row, 0).toString();
        jtxtCol2.setText(strNombre);
    }//GEN-LAST:event_jtblJoin2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            if (jtxtCol1.getText().equals("") || jtxtCol2.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Debe selecionar las columnas para la Relación");
            } else {
                ArrayList<String> ArrCol = new ArrayList<>();
                ArrayList<String> ArrCo2 = new ArrayList<>();

                String valorT1 = (String) jCmbTabla1.getSelectedItem();
                String valorT2 = (String) jCmbTabla2.getSelectedItem();
                String col1 = jtxtCol1.getText();
                String col2 = jtxtCol2.getText();
                String base = txtNombreBase.getText();
                ResultSet rsTabla1 = ManejadorConsultas.consultarJoin(valorT1, valorT2, base, col1, col2);
                ResultSetMetaData mdT1 = rsTabla1.getMetaData();
                int columnCount = mdT1.getColumnCount();

                ArrC = ManejadorConexion.consultarJoin(valorT1, valorT2, base, col1, col2, columnCount);

                String v1 = "";
                String v = "";
                for (int i = 1; i < columnCount; i++) {
                    ArrCol.add(mdT1.getColumnName(i));

                }
                for (String columnas : ArrCol) {
                    v1 = v1 + columnas + "\t";
                }

                String t1 = "";

                ResultSet rsTabla2 = ManejadorConsultas.Consultar_Valores(valorT1, base);
                ResultSetMetaData mdT2 = rsTabla2.getMetaData();
                int columnCount2 = mdT2.getColumnCount();
                int n1 = 1;

                for (int i = 1; i < columnCount2 + 1; i++) {
                    ArrCo2.add(mdT2.getColumnName(i));

                }
                for (String columnas : ArrCo2) {
                    if (n1 == ArrCo2.size()) {
                        t1 = t1 + "id." + columnas;
                    } else {
                        n1 = n1 + 1;
                        t1 = t1 + "id." + columnas + ",";
                    }
                }
                String valCol = t1;

                for (String valor : ArrC) {

                    v = v + valor;

                }

                colJoin("", valorT1, valorT2, base, col1, col2, columnCount2, valCol);
            }
        } catch (Exception d) {
            d.getMessage();
        }


    }//GEN-LAST:event_jButton1ActionPerformed
    public void valoresColumnas(String valor) throws SQLException, ClassNotFoundException {

        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nombre de las columnas");

        jtblColumnas.setModel(modelo);
        String[] datos = new String[1];
        String s = "";
        if (valor.equals("")) {
            String valor1 = (String) jCmbTabla1.getSelectedItem();
            String valor2 = (String) jCmbTabla2.getSelectedItem();

            algoritmo a = new algoritmo();

            String col[] = (a.valorJoin(valor1, valor2, txtNombreBase.getText())).split(",");
            for (String valC : col) {
                datos[0] = valC;
                modelo.addRow(datos);

            }

        }
        jtblColumnas.setModel(modelo);

    }

    public void colJoin(String valor, String tabla1, String tabla2, String Base, String col1, String col2, int colT, String valCol) throws ClassNotFoundException, SQLException {
        ArrayList<String> ArrN = new ArrayList<>();

        DefaultTableModel modelo = new DefaultTableModel();
        ResultSet rsTabla1 = ManejadorConsultas.consultarJoinT(tabla1, tabla2, Base, col1, col2, valCol);
        ResultSetMetaData mdT1 = rsTabla1.getMetaData();
        int columnCount = mdT1.getColumnCount();

        String v1 = "";
        String v = "";
        for (int i = 1; i <= columnCount; i++) {
            ArrN.add(mdT1.getColumnName(i));
        }
        for (String columnas : ArrN) {
            modelo.addColumn(columnas);
        }
        jTableJoin.setModel(modelo);
        String[] datos = new String[colT];
        String s = "";
        int n = 0;
        if (valor.equals("")) {
            try {
                ArrJ = ManejadorConexion.consulJoinT(tabla1, tabla2, Base, col1, col2, valCol);
            } catch (ClassNotFoundException ex) {
                ex.getMessage();
            }
            for (String campos : ArrJ) {
                if (n == colT) {
                    n = 0;
                    modelo.addRow(datos);
                }
                datos[n] = campos;
                n = n + 1;
            }

        }
        jTableJoin.setModel(modelo);

    }

    public void valoresColumnas2(String valor) throws SQLException, ClassNotFoundException {

        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nombre de las columnas");

        jtblJoin2.setModel(modelo);
        String[] datos = new String[1];
        String s = "";
        if (valor.equals("")) {
            String valor1 = (String) jCmbTabla1.getSelectedItem();
            String valor2 = (String) jCmbTabla2.getSelectedItem();

            algoritmo a = new algoritmo();

            String col[] = (a.valorJoin2(valor1, valor2, txtNombreBase.getText())).split(",");
            for (String valC : col) {

                datos[0] = valC;
                modelo.addRow(datos);

            }

        }
        jtblJoin2.setModel(modelo);

    }

    public void ValoresBase(String valor, String Base) {

        DefaultTableModel modelo = new DefaultTableModel();
        modelo.addColumn("Nombre de la base de datos");

        jTblBaseDatos.setModel(modelo);
        String[] datos = new String[1];
        String s = "";
        if (valor.equals("")) {
            try {
                ArrB = ManejadorConexion.ConsultarBase(Base);
            } catch (ClassNotFoundException ex) {
                ex.getMessage();

            } catch (SQLException ex) {
                Logger.getLogger(JfPrincipal.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
            for (String va : ArrB) {

                datos[0] = va;

                modelo.addRow(datos);
            }
        }
        jTblBaseDatos.setModel(modelo);

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JfPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JfPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JfPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JfPrincipal.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JfPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnalizar;
    private javax.swing.JButton btnRevisar;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jCmbTabla1;
    private javax.swing.JComboBox jCmbTabla2;
    private javax.swing.JPanel jDesktop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableJoin;
    private javax.swing.JTable jTblBaseDatos;
    private javax.swing.JTable jtblColumnas;
    private javax.swing.JTable jtblJoin2;
    private javax.swing.JTextField jtxtCol1;
    private javax.swing.JTextField jtxtCol2;
    private javax.swing.JTextArea jtxtResultado;
    private javax.swing.JTextField txtNombreBase;
    // End of variables declaration//GEN-END:variables
}
